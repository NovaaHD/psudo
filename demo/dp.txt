function LCS_LENGTH(x, y)
    m = len(x) + 1
    n = len(y) + 1
    b = Matrix((m, n)).astype(str)
    c = Matrix((m, n)).astype(int)
    for i = 0 to m
        for j = 0 to n
            b[i][j] = ' '
            c[i][j] = 0
    for i = 1 to m
        for j = 1 to n
            print(i)
            print(j)
            if x[i-1] == y[j-1]
                c[i][j] = c[i-1][j-1] + 1
                b[i][j] = '\\'
            else if c[i-1][j] >= c[i][j-1]
                c[i][j] = c[i-1][j]
                b[i][j] = '|'
            else
                c[i][j] = c[i][j-1]
                b[i][j] = '-'
    return b

function PRINT_LCS(b, X, i, j)
    if (i == 0) or (j == 0)
        return
    if b[i][j] == '\\'
        PRINT_LCS(b, X, i-1, j-1)
        lcs.push(X[i-1])
    else if b[i][j] == '|'
        PRINT_LCS(b, X, i-1, j)
    else
        PRINT_LCS(b, X, i, j-1)


seq1 = 'ABCBDAB'
seq2 = 'BDCABA'
Stack lcs

b = LCS_LENGTH(seq1, seq2)
i = len(seq1)
j = len(seq2)
PRINT_LCS(b, seq1, i, j)
